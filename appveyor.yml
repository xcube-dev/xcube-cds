version: '{build}'

image:
  - Ubuntu2204
  - macos

configuration: Release

platform:
  - x64

for:
-
  matrix:
    only:
      - image: macos
      - image: Previous macos  # not usually needed, but might use it while debugging
  install:
    - curl -Ls https://micro.mamba.pm/api/micromamba/osx-64/latest | tar -xvj bin/micromamba
    - mv bin/micromamba ./micromamba
-
  matrix:
    only:
      - image: Ubuntu2204
  install:
    - curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
    - mv bin/micromamba ./micromamba

build_script:
  # Diagnostics
  - echo $PLATFORM
  - echo $APPVEYOR_BUILD_WORKER_IMAGE
  - uname -a
  - pwd
  - ls

  # Set up micromamba
  - ./micromamba shell init -s bash --root-prefix ~/micromamba
  - source ~/.bashrc
  - source ~/.profile
  - hash -r
  - mkdir -p ~/micromamba/pkgs/
  - export MAMBA_ROOT_PREFIX=~/micromamba
  - export MAMBA_EXE=$(pwd)/micromamba
  - . $MAMBA_ROOT_PREFIX/etc/profile.d/micromamba.sh

  # Clone xcube repository, install xcube dependencies with micromamba,
  # and install the latest version of xcube with setup.py.
  - git clone https://github.com/xcube-dev/xcube $HOME/xcube
  - micromamba create --name xc --file $HOME/xcube/environment.yml
  - micromamba activate xc
  - cd $HOME/xcube
  - pip install --no-deps .

  # Use micromamba to install all xcube-cds dependencies *except* xcube
  # (already manually installed), then install xcube-cds itself with setup.py.
  - cd $APPVEYOR_BUILD_FOLDER
  - grep -v "^  - xcube" environment.yml > env_no_xcube.yml
  - micromamba update --yes --name xc --file env_no_xcube.yml
  - pip install --no-deps .

  # Make sure pytest is installed
  - micromamba install --yes --name xc --channel conda-forge pytest attrs

  # Print some diagnostics (useful for debugging)
  - micromamba list
  - xcube --version
  - python -c "from xcube_cds.version import version; print(f'xcube_cds version {version}')"

  # Run the test suite
  - python -m pytest
